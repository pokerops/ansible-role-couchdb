---
- name: Add couchdb repo
  ansible.builtin.include_tasks: 'repo.yml'

- name: Install couchdb dependencies
  ansible.builtin.package:
    name: "{{ couchdb_packages }}"
    state: present

- name: Configure installation mode
  ansible.builtin.debconf:
    name: couchdb
    question: couchdb/mode
    value: "{{ couchdb_install_mode }}"
    vtype: select

- name: Configure cookie
  ansible.builtin.debconf:
    name: couchdb
    question: couchdb/cookie
    value: "{{ couchdb_cookie | trim }}"
    vtype: string

- name: Install couchdb package
  ansible.builtin.apt:
    name: "{{ couchdb_install_package }}"

- name: Create couchdb group
  ansible.builtin.group:
    name: "{{ couchdb_group }}"
    state: present

- name: Create backup directory
  ansible.builtin.file:
    path: "{{ couchdb_backup_target }}"
    state: directory
  tags:
    - skip_ansible_lint

- name: Create couchdb data backup script
  ansible.builtin.template:
    src: "{{ couchdb_backup_template }}"
    dest: "{{ couchdb_backup_bin }}"
    group: root
    owner: root
    mode: 0750
  vars:
    backup_path: "{{ couchdb_backup_target }}"
    data_dir: "{{ couchdb_data_dir }}"
    retention_period: "{{ couchdb_backup_retention_days }}"

- name: Create couchdb data restore script
  ansible.builtin.template:
    src: "{{ couchdb_restore_template }}"
    dest: "{{ couchdb_restore_bin }}"
    group: root
    owner: root
    mode: 0750
  vars:
    backup_path: "{{ couchdb_backup_target }}"
    data_dir: "{{ couchdb_data_dir }}"
    couchdb_data_user: "{{ couchdb_user }}"
    couchdb_data_group: "{{ couchdb_group }}"

- name: Create couchdb backup daily schedule
  ansible.builtin.cron:
    name: "couchdb daily backup"
    special_time: daily
    job: "{{ couchdb_restore_bin }}"
  when: couchdb_backup_daily

- name: Configure couchdb vm.args file
  ansible.builtin.template:
    src: "{{ couchdb_vm_args_template }}"
    dest: "/opt/couchdb/etc/vm.args"
    owner: couchdb
    group: couchdb
    mode: 0640
  notify: Restart couchdb

- name: Configure couchdb ini files
  ansible.builtin.copy:
    dest: "/opt/couchdb/etc/local.d/{{ _filename }}"
    content: "{{ _content }}"
    owner: couchdb
    group: couchdb
    mode: 0640
  vars:
    _filename: "{{ item | regex_replace('.j2$', '') | basename }}"
    _content: "{{ lookup('template', item) }}"
  loop: "{{ lookup('fileglob', 'templates/config/*.j2', wantlist=True) }}"
  loop_control:
    label: "{{ _filename }}"
  notify: Restart couchdb

- name: Start couchdb service
  ansible.builtin.service:
    name: "{{ couchdb_service_name }}"
    state: started
    enabled: true
