---
- name: add couchdb repo
  ansible.builtin.include_tasks: 'repo.yml'

- name: install couchdb dependencies
  ansible.builtin.package:
    name:
      - curl
      - apt-transport-https
      - gnupg
    state: present

- name: configure installation mode
  ansible.builtin.debconf:
    name: couchdb
    question: couchdb/mode
    value: "{{ couchdb_install_mode }}"
    vtype: select

- name: configure cookie
  ansible.builtin.debconf:
    name: couchdb
    question: couchdb/cookie
    value: "{{ couchdb_cookie }}"
    vtype: string

- name: install couchdb package
  ansible.builtin.apt:
    name: "{{ couchdb_install_package }}"

- name: create couchdb group
  ansible.builtin.group:
    name: "{{ couchdb_group }}"
    state: present

- name: create backup directory
  ansible.builtin.file:
    path: "{{ couchdb_backup_target }}"
    state: directory
  tags:
    - skip_ansible_lint

- name: create couchdb data backup script
  ansible.builtin.template:
    src: "templates/scripts/couchdb-backup.sh.j2"
    dest: "{{ couchdb_backup_bin }}"
    group: root
    owner: root
    mode: 0750
  vars:
    backup_path: "{{ couchdb_backup_target }}"
    data_dir: "{{ couchdb_data_dir }}"
    retention_period: "{{ couchdb_backup_retention_days }}"

- name: create couchdb data restore script
  ansible.builtin.template:
    src: "templates/scripts/couchdb-restore.sh.j2"
    dest: "{{ couchdb_restore_bin }}"
    group: root
    owner: root
    mode: 0750
  vars:
    backup_path: "{{ couchdb_backup_target }}"
    data_dir: "{{ couchdb_data_dir }}"
    couchdb_data_user: "{{ couchdb_user }}"
    couchdb_data_group: "{{ couchdb_group }}"

- name: create couchdb backup daily schedule
  ansible.builtin.cron:
    name: "couchdb daily backup"
    special_time: daily
    job: "{{ couchdb_restore_bin }}"
  when: couchdb_backup_daily

- name: configure couchdb vm.args file
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /opt/couchdb/etc/{{ item | basename | regex_replace('\.j2', '') }}
    owner: couchdb
    group: couchdb
    mode: 0640
  with_fileglob:
    - templates/etc/vm.args.j2
  notify: restart couchdb

- name: configure couchdb ini files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /opt/couchdb/etc/local.d/{{ item | basename | regex_replace('\.j2', '') }}
    owner: couchdb
    group: couchdb
    mode: 0640
  with_fileglob:
    - templates/config/*.j2
  notify: restart couchdb

- name: start couchdb service
  ansible.builtin.service:
    name: "{{ couchdb_service_name }}"
    state: started
    enabled: true
